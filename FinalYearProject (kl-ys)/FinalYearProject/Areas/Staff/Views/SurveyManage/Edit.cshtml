@model IEnumerable<FinalYearProject.Models.ViewModels.ViewSurveyQuestionVM>

@{
    ViewData["Title"] = "View Survey Question";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /* Custom CSS for additional styling */
    body {
        background-color: #f8f9fa; /* Light gray background */
    }

    h2 {
        color: #007bff; /* Blue header text */
    }

    table {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Box shadow for the table */
    }

    .thead-light th {
        background-color: #007bff; /* Blue table header background */
        color: #ffffff; /* White text on the table header */
    }

    label {
        color: #000000; /* White text on radio button labels */
        padding: 5px;
        border-radius: 5px;
        cursor: pointer;
    }

    input[type="radio"] {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        width: 15px;
        height: 15px;
        border: 2px solid #007bff; /* Blue border for radio buttons */
        border-radius: 50%; /* Make the radio button circular */
        margin-right: 5px;
        vertical-align: middle;
        outline: none;
        cursor: pointer;
    }

        input[type="radio"]:checked {
            background-color: #007bff; /* Blue color when radio button is checked */
            border: 2px solid #007bff; /* Blue border for checked radio buttons */
        }

    .btn-secondary {
        background-color: #6c757d; /* Gray color for the "Back to List" button */
        color: #ffffff; /* White text on the button */
    }

    .btn-info {
        background-color: #17a2b8; /* Turquoise color for the "Submit Survey" button */
        color: #ffffff; /* White text on the button */
    }
</style>
@foreach (var item in Model)
{
    <h1 class="mt-4">Survey: @Html.DisplayFor(modelItem => item.survey_name)</h1>
}

<table class="table table-bordered mt-4">
    <thead class="thead-light">
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.question.question_id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.question.question)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var questionType in Model.SelectMany(vm => vm.questionSetType.Select(q => q.questionType)).Distinct())
        {
            <tr>
                <th colspan="4">@questionType.questionType_name</th>
            </tr>

            @foreach (var question in Model.SelectMany(vm => vm.questionSet.Where(q => q.questionType_id == questionType.questionType_id)))
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => question.question_id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => question.question)
                    </td>
                </tr>
            }
        }

        <tr>
            <form asp-action="DeleteQuestion">
           
                <input type="hidden" name="survey_id" value="@Model.First().survey_id" />
                <input type="submit" value="Delete Question" class="btn btn-danger" /> |
        </form>

        <form asp-action="AddQuestion">
            
                <input type="hidden" name="survey_id" value="@Model.First().survey_id" />
                <input type="submit" value="Add Question" class="btn btn-info" />
    
        </form>
        </tr>
    </tbody>
</table>



