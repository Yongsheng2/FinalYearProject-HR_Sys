@model IEnumerable<FinalYearProject.Models.ViewModels.CreateSurveyQuestionVM>

@{
    ViewData["Title"] = "Add Question";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewData["ErrorMessage2"] != null)
{
    <div class="alert alert-danger">
        @ViewData["ErrorMessage2"]
    </div>
}
<style>
    /* Custom CSS for additional styling */
    body {
        background-color: #f8f9fa; /* Light gray background */
    }

    h2 {
        color: #007bff; /* Blue header text */
    }

    table {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Box shadow for the table */
    }

    .thead-light th {
        background-color: #007bff; /* Blue table header background */
        color: #ffffff; /* White text on the table header */
    }

    label {
        color: #000000; /* White text on radio button labels */
        padding: 5px;
        border-radius: 5px;
        cursor: pointer;
    }

    input[type="radio"] {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        width: 15px;
        height: 15px;
        border: 2px solid #007bff; /* Blue border for radio buttons */
        border-radius: 50%; /* Make the radio button circular */
        margin-right: 5px;
        vertical-align: middle;
        outline: none;
        cursor: pointer;
    }

        input[type="radio"]:checked {
            background-color: #007bff; /* Blue color when radio button is checked */
            border: 2px solid #007bff; /* Blue border for checked radio buttons */
        }

    .btn-secondary {
        background-color: #6c757d; /* Gray color for the "Back to List" button */
        color: #ffffff; /* White text on the button */
    }

    .btn-info {
        background-color: #17a2b8; /* Turquoise color for the "Submit Survey" button */
        color: #ffffff; /* White text on the button */
    }
</style>
<h1 class="text-info">Survey: @Html.DisplayFor(modelItem => Model.First().survey_name)</h1>


<form asp-action="Create">
    <table class="table table-bordered mt-4">
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.question.question)
                </th>
                <th>
                    Select all   <input type="checkbox" id="selectAll" onclick="selectAllQuestions(this)" />
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var questionType in Model.SelectMany(vm => vm.questionSet.Select(q => q.questionType)).Distinct())
            {
                <tr>
                    <th colspan="4">@questionType.questionType_name</th>
                </tr>
                var selectedQuestionsCount = 0;
                @foreach (var question in Model.SelectMany(vm => vm.questionSet.Where(q => q.questionType_id == questionType.questionType_id)))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => question.question)
                        </td>
                           <td>
                            <input type="checkbox" name="selectedQuestions" value="@question.question_id" />
                         
                        </td>
                    </tr>
                }             
            }
        </tbody>
        <tr>
            <td colspan="4">
                <input type="hidden" name="survey_id" value="@Model.First().survey_id" />
                <input type="hidden" name="company_id" value="@Model.First().company_id" />
                <input type="hidden" name="survey_name" value="@Model.First().survey_name" />
                <input type="submit" value="Create" class="btn btn-primary" />
            </td>
        </tr>
    </table>
</form>

<script>
    function selectAllQuestions(checkbox) {
        var checkboxes = document.getElementsByName('selectedQuestions');

        for (var i = 0; i < checkboxes.length; i++) {
            checkboxes[i].checked = checkbox.checked;
        }
    }
</script>
